{"version":3,"file":"static/js/759.c06a6e80.chunk.js","mappings":"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","sources":["ApiService/ApiService.js","views/dashboard/dashboardComponent/Modal.js","views/dashboard/dashboardComponent/Outbox.js","views/dashboard/Dashboard.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nlet config = require(\"./config.json\");\r\n\r\nexport const ApiService = {\r\n\r\n    get: (url, params, configLocal) => {\r\n        const getToken = configLocal ? configLocal.token || localStorage.getItem(\"token\") : localStorage.getItem(\"token\");\r\n        // console.log(\"line 9\", getToken);\r\n        const localConfigAxios = {\r\n            headers: {\r\n                'Authorization': `Bearer ${getToken}`,\r\n            },\r\n            params,\r\n            ...configLocal\r\n        }\r\n        return axios.get(config.host + url, localConfigAxios)\r\n    },\r\n\r\n    post: (url, params, configLocal) => {\r\n        const getToken = configLocal ? configLocal.token || localStorage.getItem(\"token\") : localStorage.getItem(\"token\");\r\n        const localConfigAxios = {\r\n            headers: {\r\n                'Authorization': `Bearer ${getToken}`,\r\n            },\r\n            ...configLocal\r\n        }\r\n\r\n        return axios.post(config.host + url, params, localConfigAxios)\r\n    },\r\n\r\n}","import React, { useState } from 'react'\r\nimport { Modal, Form, Row, Button } from 'react-bootstrap';\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { ApiService } from '../../../ApiService/ApiService';\r\nimport { useSelector} from 'react-redux'\r\nconst ModalData = (props) => {\r\n\r\n    // let token = jwtDecode(window.localStorage.getItem(\"token\"));\r\n    const token = jwtDecode(useSelector((state => state.token)));\r\n    const [params, setParams] = useState({\r\n        form: {\r\n            ...props.dataApi,\r\n            uid_sekolah: token.id\r\n        }\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        event.preventDefault()\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        let form = { ...params.form };\r\n        form[name] = value;\r\n        setParams({ form });\r\n    }\r\n\r\n    const saveData = async (event) => {\r\n        event.preventDefault()\r\n        props.onHide();\r\n\r\n        if (params.form.id) {\r\n            let form = { ...params.form }\r\n            if (!form.sendStatusDate || form.sendStatusDate == null) form.sendStatusDate = 0;\r\n\r\n            let updateData = await ApiService.post(`/wa/outbox-save`, form);\r\n            console.log('line 34', updateData.data);\r\n            if (updateData.data.status == \"success\") {\r\n                alert('data berhasil diubah')\r\n                props.onLoadData();\r\n            }\r\n        } else {\r\n            let addData = await ApiService.post(`/wa/outbox-save`, params.form);\r\n            console.log('line 38', addData.data);\r\n            alert('data berhasil ditambahkan');\r\n            props.onLoadData();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={props.show} onHide={props.onHide}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title >{props.modalTitle}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form >\r\n                    <Row>\r\n                        <>\r\n                            <Form.Group className='col col-md-12'>\r\n                                <Form.Label>Nomor Tujuan</Form.Label>\r\n                                <Form.Control type='text' name='nomorTujuan' required onChange={handleChange} defaultValue={params.form.nomorTujuan} placeholder=\"form modal check\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className='col col-md-12'>\r\n                                <Form.Label>Pesan</Form.Label>\r\n                                <Form.Control as=\"textarea\" placeholder=\"Leave a comment here\"\r\n                                    style={{ height: '100px', fontSize: '12px' }}\r\n                                    required\r\n                                    name='message'\r\n                                    onChange={handleChange}\r\n                                    defaultValue={params.form.message}\r\n                                />\r\n                            </Form.Group>\r\n                        </>\r\n                    </Row>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={props.onHide}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"warning\" type=\"submit\" onClick={saveData}>\r\n                    {props.textBtn}\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalData","import React from 'react'\r\nimport { CButton, CCard, CCardBody, CCardHeader, CForm, CFormInput, CFormLabel, CFormSelect, CRow, CTable, CTableHead, CTableRow, CTableHeaderCell, CTableBody, CTableDataCell, CCol } from '@coreui/react'\r\n\r\nimport { ApiService } from '../../../ApiService/ApiService';\r\nimport ModalData from './Modal';\r\nconst Outbox = () => {\r\n\r\n\r\n    let defaultDate = new Date();\r\n    defaultDate.getDate();\r\n    \r\n    const [params, setParams] = React.useState({\r\n        jenis: '1',\r\n        tanggal1: defaultDate || '',\r\n        tanggal2: defaultDate || '',\r\n        datas: [],\r\n        satuData: {},\r\n        show: false,\r\n        modalTitle: '',\r\n        modalButton: '',\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        setParams((params)=>({...params, [name] : value}))\r\n    }\r\n\r\n    const handleFormTanggal = () => {\r\n        if (params.jenis == \"1\") {\r\n            return (\r\n                <>\r\n                    <CCol md={3}>\r\n                        <CFormLabel>Tanggal 1</CFormLabel>\r\n                        <CFormInput type='date' name='tanggal1' defaultValue={defaultDate.toLocaleDateString('en-CA')} />\r\n                    </CCol>\r\n                    <CCol md={3}>\r\n                        <CFormLabel>Tanggal 2</CFormLabel>\r\n                        <CFormInput type='date' name='tanggal2' defaultValue={defaultDate.toLocaleDateString('en-CA')} />\r\n                    </CCol>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await onLoadData()\r\n    }\r\n\r\n    const onLoadData = async () => {\r\n        const { jenis, tanggal1, tanggal2 } = params;\r\n\r\n        let localParams = {\r\n\r\n            limit: 25,\r\n            sort: 'id desc'\r\n        }\r\n\r\n        let res = await ApiService.post(`/wa/get-outbox`, { jenis, tanggal1, tanggal2 }, { params: localParams });\r\n\r\n        setParams((params)=>({...params, datas : res.data.data.datas, show: false, satuData: res.data.data.datas[0]}))\r\n\r\n    }\r\n\r\n    const handleClose = () => setParams({ ...params, show: false });\r\n\r\n    const handleAddData = () => {\r\n        setParams((params)=>({...params, show : true, modalTitle : \"Tambah Data\", modalButton : \"Save\", satuData: {} }))\r\n    }\r\n\r\n    const handleEditData = (dataApi) => {\r\n        setParams((params)=>({...params, show : true, modalTitle : \"Edit Data\", modalButton : \"Update\", satuData : dataApi}));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {params.show?\r\n                <ModalData show={params.show} onHide={handleClose} modalTitle={params.modalTitle} textBtn={params.modalButton} onLoadData={onLoadData} dataApi={params.satuData} /> : ''\r\n            }\r\n            \r\n            <CCard style={{ border: \"1px solid #FD841F\" }}>\r\n                <CCardHeader style={{ background: \"#FD841F\", color: \"#fff\", fontWeight: \"bold\" }}>\r\n                    <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <h5>Outbox</h5>\r\n                        <CButton size='sm' type='submit' onClick={handleAddData}>Add Data</CButton>\r\n                    </div>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                    <CForm onSubmit={handleSubmit}>\r\n                        <CRow>\r\n                            <CCol md={3}>\r\n                                <CFormLabel>Jenis</CFormLabel>\r\n                                <CFormSelect name='jenis' onChange={handleChange}>\r\n                                    <option value=\"1\">Terkirim</option>\r\n                                    <option value=\"0\">Antrian</option>\r\n                                </CFormSelect>\r\n                            </CCol>\r\n                            {handleFormTanggal()}\r\n                            <CCol md={3}>\r\n                            <CButton size='sm' style={{ marginTop: \"35px\", background: \"#379237\", color: \"#FFF\", fontWeight: \"bold\", border: \"none\" }} type='submit'>Cari</CButton>\r\n                            </CCol>\r\n                        </CRow>\r\n                    </CForm>\r\n                    <CTable small className='mt-4 table-responsive table-bordered'>\r\n                        <CTableHead>\r\n                            <CTableRow>\r\n                                <CTableHeaderCell scope=\"col\">Nomor</CTableHeaderCell>\r\n                                <CTableHeaderCell scope=\"col\">Tanggal dibuat</CTableHeaderCell>\r\n                                <CTableHeaderCell scope=\"col\">Nomor Tujuan</CTableHeaderCell>\r\n                                <CTableHeaderCell scope=\"col\">Pesan</CTableHeaderCell>\r\n                                <CTableHeaderCell scope=\"col\">Harga</CTableHeaderCell>\r\n                                <CTableHeaderCell scope=\"col\">Aksi</CTableHeaderCell>\r\n                            </CTableRow>\r\n                        </CTableHead>\r\n                        <CTableBody>\r\n                            {params.datas.map((dataApi, index) => {\r\n                                let dateNew = dataApi.createdAt.substr(0, 10);\r\n                                let time = dataApi.createdAt.substr(11, 8);\r\n                                return (\r\n                                    <CTableRow key={dataApi.id}>\r\n                                        <CTableDataCell>{index + 1}</CTableDataCell>\r\n                                        <CTableDataCell>{`${dateNew} ${time}`}</CTableDataCell>\r\n                                        <CTableDataCell>{dataApi.nomorTujuan}</CTableDataCell>\r\n                                        <CTableDataCell>{dataApi.message}</CTableDataCell>\r\n                                        <CTableDataCell>{dataApi.harga}</CTableDataCell>\r\n                                        <CTableDataCell>\r\n                                            <CButton size='sm' onClick={() => handleEditData(dataApi)}>Edit</CButton>\r\n                                        </CTableDataCell>\r\n                                    </CTableRow>\r\n                                )\r\n                            })}\r\n                        </CTableBody>\r\n                    </CTable>\r\n                </CCardBody>\r\n            </CCard>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Outbox","import React from 'react'\n\nimport {\n\n  CCol,\n  CRow,\n} from '@coreui/react'\n\nimport Outbox from './dashboardComponent/Outbox'\nconst Dashboard = () => {\n\n  return (\n    <>\n      <CRow>\n        <CCol md={12} style={{ marginTop: \"30px\" }}>\n          <Outbox />\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n"],"names":["config","require","ApiService","get","url","params","configLocal","getToken","token","localStorage","getItem","localConfigAxios","headers","axios","host","post","props","jwtDecode","useSelector","state","useState","form","dataApi","uid_sekolah","id","setParams","handleChange","event","preventDefault","name","target","value","saveData","onHide","sendStatusDate","updateData","console","log","data","status","alert","onLoadData","addData","Modal","show","size","centered","closeButton","modalTitle","Form","Row","className","type","required","onChange","defaultValue","nomorTujuan","placeholder","as","style","height","fontSize","message","Button","variant","onClick","textBtn","defaultDate","Date","getDate","React","jenis","tanggal1","tanggal2","datas","satuData","modalButton","handleSubmit","localParams","limit","sort","res","border","background","color","fontWeight","display","justifyContent","onSubmit","md","toLocaleDateString","handleFormTanggal","marginTop","small","scope","map","index","dateNew","createdAt","substr","time","harga","handleEditData"],"sourceRoot":""}