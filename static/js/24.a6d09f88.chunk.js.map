{"version":3,"file":"static/js/24.a6d09f88.chunk.js","mappings":"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","sources":["ApiService/ApiService.js","views/pages/login/Login.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nlet config = require(\"./config.json\");\r\n\r\nconst pathUrl = process.env.REACT_APP_API_URL;\r\nexport const ApiService = {\r\n    get: (url, params, configLocal) => {\r\n        const getToken = configLocal ? configLocal.token || localStorage.getItem(\"token\") : localStorage.getItem(\"token\");\r\n        // console.log(\"line 9\", pathUrl);\r\n        const localConfigAxios = {\r\n            headers: {\r\n                'Authorization': `Bearer ${getToken}`,\r\n            },\r\n            params,\r\n            ...configLocal\r\n        }\r\n        return axios.get(pathUrl + url, localConfigAxios)\r\n    },\r\n\r\n    post: (url, params, configLocal) => {\r\n        const getToken = configLocal ? configLocal.token || localStorage.getItem(\"token\") : localStorage.getItem(\"token\");\r\n        console.log(\"line 9\", pathUrl);\r\n        const localConfigAxios = {\r\n            headers: {\r\n                'Authorization': `Bearer ${getToken}`,\r\n            },\r\n            ...configLocal\r\n        }\r\n\r\n        return axios.post(pathUrl + url, params, localConfigAxios)\r\n    },\r\n\r\n}","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilPhone } from '@coreui/icons'\nimport { ApiService } from '../../../ApiService/ApiService'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nconst Swal = require(\"sweetalert2\")\nconst Login = () => {\n\n  const dispatch = useDispatch()\n    const navigate = useNavigate();\n    const location = useLocation()\n\n  const [params, setParams] = useState({\n    style: 'none',\n    textBtn: 'Request OTP',\n    phoneNumber: '',\n    otpNumber: '',\n  })\n\n  const handleChange = (event) => {\n    let name = event.target.name;\n    let value = event.target.value;\n\n    setParams((params)=>({...params, [name] : value}))\n  }\n\n  const doLogin = async (event) =>{\n    let phoneNumber = params.phoneNumber;\n    let otp = params.otpNumber;\n    let urlLogin = `/wa/login-by-otp`;\n\n    let requestLogin = await ApiService.post(urlLogin, {phoneNumber, otp});\n    let token = requestLogin.data.data;\n    window.localStorage.setItem(\"token\", token);\n    \n    if(requestLogin.data.status==\"error\"){\n\n      Swal.fire({\n        title: 'Error!',\n        text: `${requestLogin.data.message}`,\n        icon: 'error',\n        confirmButtonText: 'Cool'\n      });\n      event.target.reset()\n      setParams((params)=>({...params, style : 'none', otpNumber : null,textBtn: 'Request OTP'}))\n\n    }else{\n\n      Swal.fire(\n        `${requestLogin.data.status}`,\n        'You clicked the button!',\n        'success'\n      )\n\n      const origin = location.state?.from?.pathname || '/dashboard';\n      dispatch({type:\"set\", token })\n      navigate(origin);\n\n    }\n  }\n\n  const doRequestOtp = async(event) =>{\n    let phoneNumber = params.phoneNumber.trim();\n    let urlRequest = `/wa/request-otp`;\n    \n    let requestOtp = await ApiService.post(urlRequest, {phoneNumber});\n    \n    if (requestOtp.data.status == \"error\") {\n      setParams((params)=>({...params, phoneNumber : ''}));\n      \n      Swal.fire({\n        title: 'Error!',\n        text: requestOtp.data.message,\n        icon: 'error',\n        confirmButtonText: 'Cool'\n      });\n\n      event.target.reset()\n\n    }else{\n      setParams((params)=>({...params, style : '', textBtn : 'Log in',}))\n    }\n  }\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n   \n    if(params.otpNumber) doLogin(event);\n    else doRequestOtp(event);\n  }\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm validated={params.validated} onSubmit={handleSubmit}>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilPhone} />\n                      </CInputGroupText>\n                      <CFormInput placeholder=\"phoneNumber\" name='phoneNumber' type='text' autoComplete=\"phoneNumber\" onChange={handleChange} onKeyPress={(event) => {\n                        if (!/[0-9]/.test(event.key)) {\n                          event.preventDefault();\n                        }\n                      }} required={true} />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4 \" style={{ display: params.style }} >\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"text\"\n                        placeholder=\"otpNumber\"\n                        autoComplete=\"otpNumber\"\n                        onChange={ handleChange}\n                        name='otpNumber'\n                        maxLength={4}\n                        onKeyPress={(event) => {\n                          if (!/[0-9]/.test(event.key)) {\n                            event.preventDefault();\n                          }\n                        }}\n\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton color=\"primary\" type='submit' disabled={false} className=\"px-4\">\n                          {params.textBtn}\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div style={{display : \"none\"}}>\n                    <h2>Sign up</h2>\n                    <p>\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua.\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                        Register Now!\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n"],"names":["pathUrl","require","process","ApiService","get","url","params","configLocal","getToken","token","localStorage","getItem","localConfigAxios","headers","axios","post","console","log","Swal","dispatch","useDispatch","navigate","useNavigate","location","useLocation","useState","style","textBtn","phoneNumber","otpNumber","setParams","handleChange","event","name","target","value","doLogin","otp","requestLogin","data","window","setItem","status","fire","title","text","message","icon","confirmButtonText","reset","origin","state","from","pathname","type","doRequestOtp","trim","requestOtp","handleSubmit","preventDefault","className","md","validated","onSubmit","cilPhone","placeholder","autoComplete","onChange","onKeyPress","test","key","required","display","cilLockLocked","maxLength","xs","color","disabled","width","to","active","tabIndex"],"sourceRoot":""}