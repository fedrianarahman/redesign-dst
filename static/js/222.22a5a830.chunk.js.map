{"version":3,"file":"static/js/222.22a5a830.chunk.js","mappings":"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","sources":["ApiService/ApiService.js","views/dashboard/waBlasteComponent/Checkbox.js","views/dashboard/WaBlaste.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nlet config = require(\"./config.json\");\r\n\r\nexport const ApiService = {\r\n\r\n    get: (url, params, configLocal) => {\r\n        const getToken = configLocal ? configLocal.token || localStorage.getItem(\"token\") : localStorage.getItem(\"token\");\r\n        // console.log(\"line 9\", getToken);\r\n        const localConfigAxios = {\r\n            headers: {\r\n                'Authorization': `Bearer ${getToken}`,\r\n            },\r\n            params,\r\n            ...configLocal\r\n        }\r\n        return axios.get(config.host + url, localConfigAxios)\r\n    },\r\n\r\n    post: (url, params, configLocal) => {\r\n        const getToken = configLocal ? configLocal.token || localStorage.getItem(\"token\") : localStorage.getItem(\"token\");\r\n        const localConfigAxios = {\r\n            headers: {\r\n                'Authorization': `Bearer ${getToken}`,\r\n            },\r\n            ...configLocal\r\n        }\r\n\r\n        return axios.post(config.host + url, params, localConfigAxios)\r\n    },\r\n\r\n}","import React from 'react'\r\n\r\nconst Checkbox = ({ id, type, name, handleClick, isChecked, data }) => {\r\n  //console.log(\"line 4\",id, type, name, handleClick, isChecked)\r\n  return (\r\n    <input\r\n      id={id}\r\n      name={name}\r\n      type={type}\r\n      onChange={e => handleClick(e,data)}\r\n      checked={isChecked}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormInput,\r\n  CFormFeedback,\r\n  CFormLabel,\r\n  CFormSelect,\r\n  CFormTextarea,\r\n  \r\n  CRow,\r\n  CTable, CTableHead, CTableRow, CTableHeaderCell, CTableBody, CTableDataCell,\r\n} from '@coreui/react'\r\nimport Checkbox from './waBlasteComponent/Checkbox';\r\nimport { ApiService } from '../../ApiService/ApiService';\r\nimport jwtDecode from 'jwt-decode';\r\nconst WaBlaste = () => {\r\n\r\n  const [params, setParams] = useState({\r\n    tahunAjaranSekolah: \"\",\r\n    kelas: \"\",\r\n    nama: \"\",\r\n  });\r\n\r\n  const [dataTabel, setDataTabel] = useState([])\r\n  const [tahunAjaran, setTahunAjaran] = useState([]);\r\n  const [dataKelas, setDataKelas] = useState([]);\r\n  // form checked\r\n  const [isCheckAll, setIsCheckAll] = useState(false);\r\n  //  end form checked\r\n\r\n  // input pesan\r\n  const [inputText, setInputTex] = useState({\r\n    input: \"\",\r\n    output: \"\",\r\n  });\r\n  // end inputPesan\r\n\r\n  const [satuData, setSatudata] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchDataTahunAjaran(),\r\n      fetchDataKelas()\r\n  }, []);\r\n\r\n\r\n  const handleSelectAll = (data) => {\r\n    setIsCheckAll(!isCheckAll)\r\n    for (let row of data) {\r\n      row.isChecked = !isCheckAll\r\n    }\r\n  };\r\n  \r\n  const ambilDataCheked = () => {\r\n    let datatable = [...dataTabel].filter(o => o.isChecked)\r\n    console.log(\"dat checked\", datatable)\r\n  }\r\n\r\n  const handleClick = (data) => {\r\n    data.isChecked = !data.isChecked\r\n    let newData = [...dataTabel]\r\n    setSatudata(data);\r\n    setDataTabel(newData);\r\n  };\r\n  const fetchDataTahunAjaran = async () => {\r\n    const tokenSS = window.sessionStorage.getItem(\"tokenSS\");\r\n    const tokenData = jwtDecode(tokenSS)\r\n\r\n    const Localparams = {\r\n      where: { \"sekolah\": tokenData.user.uid_sekolah },\r\n      limit: 1000,\r\n      sort: \"tahun_ajaran desc\",\r\n    }\r\n    let url = \"/tahunajaran\"\r\n    let params = Localparams;\r\n    let configLocal = {token : tokenSS}\r\n    // console.log(\"line 91\", configLocal);\r\n    const getDataTahunAjaran = await ApiService.get(url, params, configLocal);\r\n\r\n    setTahunAjaran(getDataTahunAjaran.data.data)\r\n  }\r\n\r\n  const fetchDataKelas = async () => {\r\n    const tokenSS = window.sessionStorage.getItem(\"tokenSS\");\r\n    const tokenData = jwtDecode(tokenSS)\r\n    const Localparams = {\r\n      sort: \"nama_kelas asc\",\r\n      uid_sekolah: tokenData.id,\r\n    }\r\n\r\n    const configLocal = {token : tokenSS}\r\n    const getDataKelas = await ApiService.get(`/kelas`, Localparams, configLocal );\r\n    setDataKelas(getDataKelas.data.data);\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    let nama = event.target.name;\r\n    let value = event.target.value;\r\n\r\n    // setParams({ ...params, [nama]: value });\r\n    setParams((params)=>({...params, [nama] : value}))\r\n  }\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const tokenSS = window.sessionStorage.getItem(\"tokenSS\");\r\n\r\n    let where = {\r\n      'a.tahun': params.tahunAjaranSekolah\r\n    }\r\n    if (params.nama) where[\"b.fullname\"] = { contains: params.nama }\r\n    if (params.kelas) where[\"a.id_kelas\"] = params.kelas\r\n\r\n    let Params = { where }\r\n    const configLocal = {token : tokenSS}\r\n\r\n    const getDataSiswa = await ApiService.get(`/siswadss/kelastahunajaran`, Params, configLocal);\r\n    setDataTabel(getDataSiswa.data.data);\r\n    dataTabel.isChecked = false\r\n  }\r\n  const fnReplace = (tpl,data) => {return (tpl+'').replace(/\\$\\(([^\\)]+)?\\)/g, function ($1, $2) { return data[$2]; });}\r\n  const handleChangePesan = (event) => {\r\n    let nama = event.target.name;\r\n    let value = event.target.value;\r\n\r\n    let text = value;\r\n    let dataReplace = {}\r\n    dataArray.map(row => {\r\n  \r\n      dataReplace[row.label] = row.value\r\n\r\n    })\r\n    text = fnReplace(text,dataReplace);\r\n    setInputTex({ ...inputText, [nama]: value, output: text });\r\n\r\n\r\n  }\r\n  let dataArray = [{\r\n    label: \"nama_siswa\",\r\n    value: \"Dede Rahmat\"\r\n  },\r\n  {\r\n    label: \"nama_kelas\",\r\n    value: \"1 E\"\r\n  },\r\n  {\r\n    label: \"tagihan\",\r\n    value: `⏺    20.000 SPP Oktober 2022\r\n⏺    20.000 SPP November 2022\r\nTOTAL TAGIHAH 40.000\r\n            `\r\n  }]\r\n  const listFormat = dataArray.map((data) => \"$(\"+data.label+\")\").join('\\n')\r\n\r\n  const handleKirimPesan = async () => {\r\n    let datatable = [...dataTabel].filter(o => o.isChecked)\r\n    let pesan = inputText.input\r\n    let dataPenerima = datatable\r\n    let formatPesan = pesan\r\n    const response = await ApiService.post(`/wa/blaster`, { dataPenerima, formatPesan });\r\n    console.log(\"line 188\", response.data);\r\n  }\r\n  return (\r\n    <>\r\n      <CCard style={{ marginBottom: \"30px\", border: \"1px solid #FD841F\" }}>\r\n        <CCardHeader style={{ background: \"#FD841F\", color: \"#fff\", fontWeight: \"bold\", textAlign: \"center\" }}>\r\n          Tahap 1 : Membuat Format  Pesan\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm>\r\n            <CRow>\r\n              <CCol md={8}>\r\n                <CFormLabel>Format Pesan</CFormLabel>\r\n                <CFormTextarea style={{ height: '100px' }} name='input' onChange={handleChangePesan}></CFormTextarea>\r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CFormLabel>Data</CFormLabel>\r\n                <CFormTextarea style={{ height: '100px' }} readOnly defaultValue={listFormat}></CFormTextarea>\r\n              </CCol>\r\n              <CCol md={8}>\r\n                <CFormLabel>Perkiraan Pesan</CFormLabel>\r\n                <CFormTextarea style={{ height: '100px' }} defaultValue={inputText.output} readOnly></CFormTextarea>\r\n              </CCol>\r\n            </CRow>\r\n          </CForm>\r\n        </CCardBody>\r\n      </CCard>\r\n      <CCard style={{ border: \"1px solid #FD841F\" }}>\r\n        <CCardHeader style={{ background: \"#FD841F\", color: \"#fff\", fontWeight: \"bold\", textAlign: \"center\" }}>\r\n          Tahap 2 : Memilih Siswa Yang Dituju\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CForm onSubmit={handleSubmit} id='wa-blaste-form'>\r\n            <CRow>\r\n              <CCol md={3}>\r\n                <CFormLabel htmlFor=\"validationCustom04\">Tahun Ajaran</CFormLabel>\r\n                <CFormSelect id=\"validationCustom04\" name='tahunAjaranSekolah' onChange={handleChange}>\r\n                  <option value=\"\">Pilih...</option>\r\n                  {tahunAjaran.map((dataTahunAjaran) => <option key={dataTahunAjaran.id} value={dataTahunAjaran.tahun_ajaran}>{dataTahunAjaran.tahun_ajaran}</option>)}\r\n                </CFormSelect>\r\n                \r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CFormLabel htmlFor=\"validationCustom04\">Kelas</CFormLabel>\r\n                <CFormSelect id=\"validationCustom04\" name='kelas' onChange={handleChange}>\r\n                  <option value=\"\">Semua</option>\r\n                  {dataKelas.map((satuDataKelas) => <option key={satuDataKelas.id} value={satuDataKelas.id}>{satuDataKelas.nama_kelas}</option>)}\r\n                </CFormSelect>\r\n                \r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CFormLabel htmlFor=\"validationCustom05\">Nama</CFormLabel>\r\n                <CFormInput type=\"text\" id=\"validationCustom05\" name='nama' onChange={handleChange} autoComplete=\"off\" />\r\n                <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>\r\n              </CCol>\r\n              <CCol md={3}>\r\n                <CButton color=\"primary\" style={{ marginTop: \"30px\" }} type=\"submit\">\r\n                  Cari\r\n                </CButton>\r\n                \r\n                <CButton style={{ marginTop: \"30px\", marginLeft: \"10px\", background: \"#F6F54D\", color: \"#000\", border: \"none\" }} onClick={handleKirimPesan}>kirim Pesan</CButton>\r\n              </CCol>\r\n            </CRow>\r\n          </CForm>\r\n          <CTable style={{ marginTop: \"30px\" }} className='table-stripped'>\r\n            <CTableHead style={{ background: \"#FFBF00\", }}>\r\n              <CTableRow>\r\n                <CTableHeaderCell scope=\"col\">No</CTableHeaderCell>\r\n                <CTableHeaderCell scope=\"col\">Nama</CTableHeaderCell>\r\n                <CTableHeaderCell scope=\"col\">No Hp Ayah</CTableHeaderCell>\r\n                <CTableHeaderCell scope=\"col\">No Hp Ibu</CTableHeaderCell>\r\n                <CTableHeaderCell scope=\"col\">Kelas</CTableHeaderCell>\r\n                <CTableHeaderCell scope=\"col\"><Checkbox type=\"checkbox\"\r\n                  name=\"selectAll\"\r\n                  id=\"selectAll\"\r\n                  handleClick={handleSelectAll}\r\n                  data={dataTabel}\r\n                  isChecked={isCheckAll} /></CTableHeaderCell>\r\n              </CTableRow>\r\n            </CTableHead>\r\n            <CTableBody>\r\n              {dataTabel.map((data, index) => {\r\n                return (\r\n                  <React.Fragment key={data.id}>\r\n                  <>\r\n\r\n                    <CTableRow key={data.id}>\r\n                      <CTableDataCell>{index + 1}</CTableDataCell>\r\n                      <CTableDataCell>{data.fullname}</CTableDataCell>\r\n                      <CTableDataCell>{data.ayah_mobile1}</CTableDataCell>\r\n                      <CTableDataCell>{data.ibu_mobile1}</CTableDataCell>\r\n                      <CTableDataCell>{data.nama_kelas}</CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <Checkbox key={data.id} type=\"checkbox\"\r\n                          name={data.fullname}\r\n                          id={data.id}\r\n                          handleClick={handleClick}\r\n                          data={data}\r\n                          isChecked={data.isChecked} />\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  </>\r\n                  </React.Fragment>\r\n                )\r\n              })}\r\n            </CTableBody>\r\n          </CTable>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WaBlaste","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["config","require","ApiService","get","url","params","configLocal","getToken","token","localStorage","getItem","localConfigAxios","headers","axios","host","post","id","type","name","handleClick","isChecked","data","onChange","e","checked","useState","tahunAjaranSekolah","kelas","nama","setParams","dataTabel","setDataTabel","tahunAjaran","setTahunAjaran","dataKelas","setDataKelas","isCheckAll","setIsCheckAll","input","output","inputText","setInputTex","setSatudata","useEffect","fetchDataTahunAjaran","fetchDataKelas","newData","tokenSS","window","sessionStorage","tokenData","jwtDecode","Localparams","where","user","uid_sekolah","limit","sort","getDataTahunAjaran","getDataKelas","handleChange","event","target","value","handleSubmit","preventDefault","contains","Params","getDataSiswa","dataArray","label","listFormat","map","join","handleKirimPesan","datatable","filter","o","pesan","dataPenerima","formatPesan","response","console","log","style","marginBottom","border","background","color","fontWeight","textAlign","md","height","text","dataReplace","row","replace","$1","$2","readOnly","defaultValue","onSubmit","htmlFor","dataTahunAjaran","tahun_ajaran","satuDataKelas","nama_kelas","autoComplete","invalid","marginTop","marginLeft","onClick","className","scope","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","index","fullname","ayah_mobile1","ibu_mobile1"],"sourceRoot":""}